name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ck
            asset_name: ck-linux-amd64
          
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: ck
            asset_name: ck-linux-arm64
            use_cross: true
          
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ck
            asset_name: ck-macos-amd64
          
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: ck
            asset_name: ck-macos-arm64
          
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ck.exe
            asset_name: ck-windows-amd64.exe

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross
      if: matrix.use_cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Build
      run: |
        if [ "${{ matrix.use_cross }}" = "true" ]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/*/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}